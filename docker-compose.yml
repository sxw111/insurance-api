services:
  db:
    image: postgres:16.3
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  zookeeper:
    image: bitnami/zookeeper:latest
    restart: always
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  kafka-init:
    image: bitnami/kafka:latest
    depends_on:
      - kafka
    entrypoint: |
      bash -c "
      until kafka-topics.sh --bootstrap-server kafka:9092 --list; do
        echo 'Waiting for Kafka...';
        sleep 5;
      done;
      kafka-topics.sh --create --topic tariff_logs --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1;
      kafka-topics.sh --list --bootstrap-server kafka:9092
      "
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"

  migrate:
    build: .
    command: poetry run alembic upgrade head
    volumes:
      - .:/app
    depends_on:
      - db
    environment:
      DATABASE_URL: ${DATABASE_URL}

  web:
    build: .
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - migrate
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092


volumes:
  postgres_data:
